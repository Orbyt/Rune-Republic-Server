package com.rs.worldserver.model.player.command;
import com.rs.worldserver.Server;
import com.rs.worldserver.Config;
import com.rs.worldserver.model.player.Client;
import com.rs.worldserver.model.npc.NPC;
import com.rs.worldserver.model.player.Command;
import com.rs.worldserver.content.skill.SkillConstants;
import com.rs.worldserver.world.*;
import java.util.ArrayList;
import java.io.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
public class Pet implements Command {

	@Override
	public void execute(Client c, String command) {
		if(c.petSpawner || c.playerRights > 6) {
			if (System.currentTimeMillis() - c.petSpawnTime < 60000) {
				c.getActionAssistant().sendMessage("You can only spawn one pet per minute");
				return;
			}
			try {
			int newNPC = Integer.parseInt(command.substring(4));
			int[] petList = {1,44,45,83,114,233,234,235,236,248,251,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,
			324,325,326,327,328,329,330,333,334,379,494,495,496,497,498,499,520,521,522,523,524,525,526,527,528,529,530,531,546,
			548,553,556,584,596,605,673,695,800,816,909,927,933,934,952,953,1036,1174,1176,1177,1178,1189,1190,1191,1236,1237,1238,
			1331,1332,1333,1360,1399,1405,1406,1452,1542,2067,2068,2102,2163,2164,2222,2253,2254,2255,2260,2261,2262,2263,2354,2355,
			2541,2554,2555,2556,2557,2558,2559,2566,2567,2568,2569,2570,2633,2637,2642,2718,2722,2724,2743,2744,2745,2759,2859,3019,
			3046,3198,3199,3293,3333,3334,3335,3336,3416,3418,3420,3422,3423,3497,3498,3499,3500,3501,3502,3574,3575,3804,3821,3838,
			3839,3848,4456,4457,4458,4459,4512,4540,4698,4699,4700,4701,4706,4907,4908,5228,5229,5230,5231,5232,5233,5234,5235,5236,
			5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,5258,5260,5407,5460,5461,5471,5666,5748,5749,5776,5777,6142,6143,
			6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6187,6200,6222,6267,6307,6537,6677,6696,6996,7044,
			7045,7046,7049,7050,7060,7090,7133,7134,7605,7636,7862,7863,8019,8020,8133,8182,8274,8349,8350,8351,8352,8353,8354,8355,
			8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8548,8549,8596,8597,8614,8615,8647,8948,9106,9107,9108,9109,9110,
			9111,9112,9113,9114,9115,9116,9117,9710,9725,9726,9727,9728,9729,9730,9731,9732,9733,9734,9735,9738,9739,9740,9741,9742,
			9743,9744,9745,9746,9747,9748,9749,9750,9751,9752,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,
			10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,
			10105,10106,10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10706,10707,10708,
			10709,10710,10711,10712,10713,10714,10715,10716,10717,10718,10719,10720,10721,10770,10771,10772,10773,10774,10775,10776,
			10777,10778,10779,10780,10781,10815,10816,10817,10818,10819,10820,11366,11367,11368,11369,11370,11450,11451,11568,11569,
			11575,11577,11578,11579,11580,11581,11582,11583,11592,11593,11594,11595,11737,11738,11739,11740,11741,11742,11743,11745,
			11746,11747,11748,11749,11750,11751,11752,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,
			11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11781,11782,11783,11784,11785,
			11786,11787,11788,11789,11790,11791,11792,11793,11794,11795,11796,11797,11798,11799,11800,12295,12752,13024,13025,13026,
			13027,13028,13029,13030,13031,13032,13033,13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,
			13047,13048,13274,13275,13276,13429,13435,13447,13481,13628,13629,13630,13631,13712,13758,13759,13760,13763,13932,14519,
			14563,14576,14907,14923,14924,14925,15020,15207,15208,15209,15210,15221};
	
			for(int i = 0; i < petList.length; i++){
				if (petList[i] == newNPC) {
					c.getActionAssistant().sendMessage("This NPC ID has been deemed disruptive by our staff");
					return;
				}
			}
			if (newNPC > 15271) {
				c.getActionAssistant().sendMessage("This NPC ID is too high");
				return;
			}
			if (newNPC <= 0) {
				return;
			}
			//for (int i = 0; i < 100; i++) {
			NPC npcPet = Server.getNpcManager().getNPC(c.petId);
            if(npcPet != null) {
				if (npcPet.petOwner == c.playerId) {
					Server.getNpcManager().deleteNPC(c.petId);
				}
			}
			int id = Server.getNpcManager().spawnNPC(newNPC, c.getAbsX(), c.getAbsY(), c.getHeightLevel(), 0);
			Server.getNpcManager().getNPC(id).petOwner = c.playerId;
			Server.getNpcManager().getNPC(id).isPet = true;
			c.petId = id;
			c.petSpawnTime = System.currentTimeMillis();
			}
			//}
			catch (Exception e) {
				c.getActionAssistant().sendMessage("Incorrect, check here for NPC list: +www.runerepublic.com#url#");
			}
		}
		else {
			c.getActionAssistant().sendMessage("You cannot have a pet!");
		}
	}

}
